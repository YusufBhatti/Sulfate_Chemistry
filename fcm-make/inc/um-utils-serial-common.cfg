$compile_vomext{?} = preprocess-vomext build-vomext
$compile_pptoanc{?} = preprocess-pptoanc build-pptoanc
$compile_fieldmod{?} = preprocess-fieldmod build-fieldmod
$compile_convpp{?} = preprocess-convpp build-convpp

step.class[preprocess-vomext preprocess-pptoanc preprocess-fieldmod preprocess-convpp] = preprocess
step.class[build-vomext build-pptoanc build-fieldmod build-convpp] = build
$steplist{?} = $extract $compile_vomext $compile_pptoanc $compile_fieldmod $compile_convpp

steps = $steplist

$ROSE_TASK_MIRROR_TARGET{?} = unset
mirror.target = ${ROSE_TASK_MIRROR_TARGET}
$mirror_steplist{?} = $compile_vomext $compile_pptoanc $compile_fieldmod $compile_convpp
mirror.prop{config-file.steps} = $mirror_steplist

$um_project_location{?} = fcm:um.xm
$um_base{?} = trunk
$um_rev{?} = head

extract.ns = um
extract.location{primary}[um] = $um_project_location
extract.location[um] = $um_base@$um_rev
extract.path-excl[um] = src \
                      \ fcm-make rose-meta rose-stem admin \
                      \ CodeOwners.txt COPYRIGHT.txt
extract.path-incl[um] = \
                      \ src/atmosphere/aerosols \
                      \ src/atmosphere/atmosphere_service \
                      \ src/atmosphere/boundary_layer \
                      \ src/atmosphere/convection \
                      \ src/atmosphere/dynamics \
                      \ src/atmosphere/dynamics_advection \
                      \ src/atmosphere/gravity_wave_drag \
                      \ src/atmosphere/free_tracers/free_tracers_inputs_mod.F90 \
                      \ src/atmosphere/large_scale_cloud \
                      \ src/atmosphere/large_scale_precipitation \
                      \ src/atmosphere/lbc_input \
                      \ src/atmosphere/radiation_control \
                      \ src/atmosphere/stochastic_physics \
                      \ src/atmosphere/UKCA \
                      \ src/constants \
                      \ src/control \
                      \ src/include \
                      \ src/io_services \
                      \ src/utility

$VOMEXT_EXEC{?}     = um-vomext.exe
$PPTOANC_EXEC{?}    = um-pptoanc.exe
$FIELDMOD_EXEC{?}   = um-fieldmod.exe
$CONVPP_EXEC{?}     = um-convpp.exe

# Required Shumlib library flags
$ldflags_shumlib{?} = -lshum_wgdos_packing \
                    \ -lshum_constants   \
                    \ -lshum_string_conv

# CPP defaults
$portio_version{?} = 2A  # C95
# Dr Hook defined in platform-specific configs or not used.

include = serial.cfg

# Set app-dependent CPP defaults:
$keys_vomext_app{?}    = $cppflags_portio UTILIO=utilio VOMEXT=vomext UTILS=utils $cppflags_drhook
$keys_pptoanc_app{?}   = $cppflags_portio UTILIO=utilio UTILS=utils PPTOANC=pptoanc $cppflags_drhook
$keys_fieldmod_app{?}  = $cppflags_portio UTILIO=utilio UTILS=utils FLDMOD=fldmod $cppflags_drhook
$keys_convpp_app{?}    = $cppflags_portio UTILIO=utilio CONVPP=convpp $cppflags_drhook

# Set defaults for additional CPP defs:
$keys_platform_extra{?} =
$keys_vomext_extra{?} =
$keys_pptoanc_extra{?} =
$keys_fieldmod_extra{?} =
$keys_convpp_extra{?} =

# Gather Fortran compiler flags:
$fcflags_overrides{?} =
$fcflags_all          = $fcflags_common $fcflags_level $fcflags_options $fcflags_overrides

$fcflags_vomext_overrides{?}    =
$fcflags_pptoanc_overrides{?}   =
$fcflags_fieldmod_overrides{?}  =
$fcflags_convpp_overrides{?}    =

$fcflags_vomext_all      = $fcflags_all $fcflags_vomext_overrides
$fcflags_pptoanc_all     = $fcflags_all $fcflags_pptoanc_overrides
$fcflags_fieldmod_all    = $fcflags_all $fcflags_fieldmod_overrides
$fcflags_convpp_all      = $fcflags_all $fcflags_convpp_overrides

# Exclusions for additional external modules:
$external_modules{?} =
$nodep_f_module = $nodep_options $external_modules

# Preprocess and build declarations
preprocess.prop{class,cpp} = $cpp
preprocess.prop{class,cpp.flags} = $cppflags

build.prop{class,cc} = $cc
build.prop{class,fc} = $fc
build.prop{class,cc.flags} = $ccflags
build.prop{class,fc.flags-ld} = $ldflags

$keys_vomext{?} = $keys_platform $keys_platform_extra \
                  $keys_vomext_app $keys_vomext_extra
$exclude_preprocess_steps_vomext = preprocess-pptoanc preprocess-fieldmod preprocess-convpp
preprocess-vomext.prop{no-step-source} = $exclude_preprocess_steps_vomext
preprocess-vomext.prop{cpp.defs,fpp.defs} = $keys_vomext
$vomext_ns_excl = um/src/utility
$vomext_ns_incl = um/src/utility/vomext

preprocess-vomext.ns-excl = $vomext_ns_excl
preprocess-vomext.ns-incl = $vomext_ns_incl

build-vomext.prop{no-step-source} = $exclude_preprocess_steps_vomext
build-vomext.target        = um-vomext um_script_functions $VOMEXT_EXEC
build-vomext.target-rename = vomext.exe:$VOMEXT_EXEC
build-vomext.prop{no-dep.f.module} = mpl gcom_mod \
                                   \ f_shum_wgdos_packing_mod \
                                   \ f_shum_string_conv_mod \
                                   \ f_shum_latlon_eq_grids_mod \
                                   \ f_shum_conversions_mod \
                                   \ $nodep_f_module
build-vomext.prop{fc.flags} = $fcflags_vomext_all
build-vomext.ns-excl = $vomext_ns_excl
build-vomext.ns-incl = $vomext_ns_incl


$keys_pptoanc{?} = $keys_platform $keys_platform_extra \
                   $keys_pptoanc_app $keys_pptoanc_extra
$exclude_preprocess_steps_pptoanc = preprocess-vomext preprocess-fieldmod preprocess-convpp
preprocess-pptoanc.prop{no-step-source} = $exclude_preprocess_steps_pptoanc
preprocess-pptoanc.prop{cpp.defs,fpp.defs} = $keys_pptoanc
$pptoanc_ns_excl = um/src/utility
$pptoanc_ns_incl = um/src/utility/pptoanc

preprocess-pptoanc.ns-excl = $pptoanc_ns_excl
preprocess-pptoanc.ns-incl = $pptoanc_ns_incl

build-pptoanc.prop{no-step-source} = $exclude_preprocess_steps_pptoanc
build-pptoanc.target        = um-pptoanc um_script_functions $PPTOANC_EXEC
build-pptoanc.target-rename = pptoanc.exe:$PPTOANC_EXEC
build-pptoanc.prop{no-dep.f.module} = mpl gcom_mod \
                                    \ f_shum_wgdos_packing_mod \
                                    \ f_shum_string_conv_mod \
                                    \ f_shum_latlon_eq_grids_mod \
                                    \ f_shum_conversions_mod \
                                    \ $nodep_f_module
build-pptoanc.prop{fc.flags} = $fcflags_pptoanc_all
build-pptoanc.ns-excl = $pptoanc_ns_excl
build-pptoanc.ns-incl = $pptoanc_ns_incl

$keys_fieldmod{?} = $keys_platform $keys_platform_extra \
                    $keys_fieldmod_app $keys_fieldmod_extra
$exclude_preprocess_steps_fieldmod = preprocess-vomext preprocess-pptoanc preprocess-convpp
preprocess-fieldmod.prop{no-step-source} = $exclude_preprocess_steps_fieldmod
preprocess-fieldmod.prop{cpp.defs,fpp.defs} = $keys_fieldmod
$fieldmod_ns_excl = um/src/utility
$fieldmod_ns_incl = um/src/utility/qxfieldmod

preprocess-fieldmod.ns-excl = $fieldmod_ns_excl
preprocess-fieldmod.ns-incl = $fieldmod_ns_incl

build-fieldmod.prop{no-step-source} = $exclude_preprocess_steps_fieldmod
build-fieldmod.target        = $FIELDMOD_EXEC
build-fieldmod.target-rename = fldmod.exe:$FIELDMOD_EXEC
build-fieldmod.prop{no-dep.f.module} = mpl gcom_mod \
                                     \ f_shum_wgdos_packing_mod \
                                     \ f_shum_string_conv_mod \
                                     \ f_shum_latlon_eq_grids_mod \
                                     \ f_shum_conversions_mod \
                                     \ $nodep_f_module
build-fieldmod.prop{fc.flags} = $fcflags_fieldmod_all
build-fieldmod.ns-excl = $fieldmod_ns_excl
build-fieldmod.ns-incl = $fieldmod_ns_incl

$keys_convpp{?} = $keys_platform $keys_platform_extra \
                  $keys_convpp_app $keys_convpp_extra
$exclude_preprocess_steps_convpp = preprocess-vomext preprocess-pptoanc preprocess-fieldmod
preprocess-convpp.prop{no-step-source} = $exclude_preprocess_steps_convpp
preprocess-convpp.prop{cpp.defs,fpp.defs} = $keys_convpp
$convpp_ns_excl = um/src/utility
$convpp_ns_incl = um/src/utility/convpp \
                \ um/src/utility/convpp/check_extra.F90 \
                \ um/src/utility/convpp/print_extra.F90 \
                \ um/src/utility/convpp/copy_nonhalo_to_halo.F90 \
                \ um/src/utility/convpp/find_max_field_size.F90    \
                \ um/src/utility/convpp/pp_header_manips.F90 \
                \ um/src/utility/convpp/cray_ibm.F90 \
                \ um/src/utility/convpp/readff-convpp.F90 \
                \ um/src/utility/convpp/un_pack-convpp.F90 \
                \ um/src/utility/convpp/read_rec-convpp.F90 \
                \ um/src/utility/convpp/integer_to_real-convpp.F90 \
                \ um/src/utility/convpp/logical_to_real-convpp.F90

preprocess-convpp.ns-excl = $convpp_ns_excl
preprocess-convpp.ns-incl = $convpp_ns_incl

build-convpp.prop{no-step-source} = $exclude_preprocess_steps_convpp
build-convpp.target        = um-convpp um_script_functions $CONVPP_EXEC
build-convpp.target-rename = main_convpp.exe:$CONVPP_EXEC
build-convpp.prop{no-dep.f.module} = mpl gcom_mod \
                                   \ f_shum_wgdos_packing_mod \
                                   \ f_shum_string_conv_mod \
                                   \ f_shum_latlon_eq_grids_mod \
                                   \ f_shum_conversions_mod \
                                   \ $nodep_f_module
build-convpp.prop{fc.flags} = $fcflags_convpp_all
build-convpp.ns-excl = $convpp_ns_excl
build-convpp.ns-incl = $convpp_ns_incl
