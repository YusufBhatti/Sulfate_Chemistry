$compile_createbc{?} = preprocess-createbc build-createbc

step.class[preprocess-createbc] = preprocess
step.class[build-createbc]      = build
$steplist{?} = $extract $compile_createbc

steps = $steplist

$ROSE_TASK_MIRROR_TARGET{?} = unset
mirror.target = ${ROSE_TASK_MIRROR_TARGET}
$mirror_steplist{?} = $compile_createbc
mirror.prop{config-file.steps} = $mirror_steplist

$um_project_location{?} = fcm:um.xm
$um_base{?} = trunk
$um_rev{?} = head

extract.ns = um
extract.location{primary}[um] = $um_project_location
extract.location[um] = $um_base@$um_rev
extract.path-excl[um] = src \
                      \ fcm-make rose-meta rose-stem bin \
                      \ CodeOwners.txt COPYRIGHT.txt admin
extract.path-incl[um] = \
                      \ src/atmosphere/aerosols \
                      \ src/atmosphere/atmosphere_service \
                      \ src/atmosphere/boundary_layer \
                      \ src/atmosphere/convection \
                      \ src/atmosphere/dynamics \
                      \ src/atmosphere/dynamics_advection \
                      \ src/constants \
                      \ src/control \
                      \ src/include \
                      \ src/io_services \
                      \ src/utility/createbc

$CREATEBC_EXEC{?}   = um-createbc.exe

# Required Shumlib library flags
$ldflags_shumlib{?} = -lshum_wgdos_packing \
                    \ -lshum_string_conv   \
                    \ -lshum_latlon_eq_grids \
                    \ -lshum_horizontal_field_interp \
                    \ -lshum_constants

# CPP defaults:
$portio_version{?} = 2A  # C95
$timer_version{?}  = 3A  # C97
# Dr Hook defined in platform-specific configs or not used.

include = serial.cfg

# Set app-dependent CPP defs:
$keys_createbc_app{?} = $cppflags_portio $cppflags_timer UTILIO=utilio UTILS=utils $cppflags_drhook

# Set defaults for additional CPP defs:
$keys_platform_extra{?} =
$keys_createbc_extra{?} =

# Gather Fortran compiler flags:
$fcflags_overrides{?} =
$fcflags_all          = $fcflags_common $fcflags_level $fcflags_options $fcflags_overrides

$fcflags_createbc_overrides{?}  =

$fcflags_createbc_all    = $fcflags_all $fcflags_createbc_overrides

# Exclusions for additional external modules:
$external_modules{?} =
$nodep_f_module = $nodep_options $external_modules

# Preprocess and build declarations:
preprocess.prop{class,cpp} = $cpp
preprocess.prop{class,cpp.flags} = $cppflags

build.prop{class,cc} = $cc
build.prop{class,fc} = $fc
build.prop{class,cc.flags} = $ccflags
build.prop{class,fc.flags-ld} = $ldflags

$keys_createbc{?} = $keys_platform $keys_platform_extra \
                    $keys_createbc_app $keys_createbc_extra
$exclude_preprocess_steps_createbc =
preprocess-createbc.prop{no-step-source} = $exclude_preprocess_steps_createbc
preprocess-createbc.prop{cpp.defs,fpp.defs} = $keys_createbc

build-createbc.prop{no-step-source} = $exclude_preprocess_steps_createbc
build-createbc.target        = $CREATEBC_EXEC
build-createbc.target-rename = createbc.exe:$CREATEBC_EXEC
build-createbc.prop{no-dep.f.module} = mpl gcom_mod \
                                     \ f_shum_wgdos_packing_mod \
                                     \ f_shum_string_conv_mod \
                                     \ f_shum_latlon_eq_grids_mod \
                                     \ f_shum_horizontal_field_interp_mod \
                                     \ f_shum_conversions_mod \
                                     \ $nodep_f_module
build-createbc.prop{fc.flags} = $fcflags_createbc_all
