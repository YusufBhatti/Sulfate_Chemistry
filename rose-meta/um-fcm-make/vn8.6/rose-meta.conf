[env:build]
compulsory=false
description=Basic compilation settings.
ns=env/build
sort-key=c
title=Basic compilation

[env:compilation]
compulsory=false
description=Override default compilers and compiler flags.
ns=env/compilation
sort-key=f
title=Advanced compilation

[env:config]
compulsory=false
description=Select the fcm-make configuration files.
ns=env/config
sort-key=a
title=Configuration file

[env:extract]
compulsory=false
description=Source extract locations.
ns=env/extract
sort-key=b
title=Sources

[env:keys]
compulsory=false
description=Platform- and build-specific preprocessing.
ns=env/keys
sort-key=e
title=Preprocessing

[env:paths]
compulsory=false
description=External include and library paths.
ns=env/paths
sort-key=d
title=External libraries

[env=atmos_exec]
compulsory=false
description=Atmosphere executable name.
help=The name of the atmosphere executable to be built.
    =
    =The default value is set in the 'common' UM fcm-make configs.
ns=env/build
sort-key=c1

[env=cc]
compulsory=false
description=C compiler.
help=The name or full path to the C compiler.
ns=env/compilation
sort-key=a1

[env=ccflags]
compulsory=false
description=C compiler flags.
help=A space-separated list of C compiler flags.
    =
    =Setting this variable will replace any existing default flags.
ns=env/compilation
sort-key=a2

[env=cpp]
compulsory=false
description=C preprocessor.
help=The name or full path to the C preprocessor.
ns=env/keys
sort-key=a1

[env=cppflags]
compulsory=false
description=C preprocessor flags.
help=A space-separated list of C preprocessor flags.
    =
    =Setting this variable will replace any existing default flags.
ns=env/keys
sort-key=a2

[env=fc]
compulsory=false
description=Fortran compiler.
help=The name or full path to the Fortran compiler.
ns=env/compilation
sort-key=b1

[env=fcflags_omp]
compulsory=false
description=Fortran OpenMP compiler flags.
help=A space-separated list of Fortran compiler flags specifically
    =intended for activating or deactivating OpenMP.
    =
    =When running without OpenMP this is typically left blank.
    =
    =Setting this variable will replace any existing default flags.
    =
    =When enabling/disabling OpenMP you should also ensure that the
    =CPP key 'C98' is set appropriately:
    = - 0A: Compiling without OpenMP
    = - 1A: Compiling with OpenMP
    =
    =CPP keys should be changed in the appropriate variable:
    = - Atmosphere:      env=keys_atmos_app or env=keys_atmos
    = - Reconfiguration: env=keys_recon_app or env=keys_recon
    = - SCM:             env=keys_scm_app   or env=keys_scm
ns=env/compilation
sort-key=c1

[env=fcflags_overrides]
compulsory=false
description=Fortran compiler overrides.
help=A space-separated list of Fortran compiler flags specifically
    =intended for overriding the default compilation flags.
    =
    =These flags are appended to the normal compilation settings and will
    =override any applicable existing settings.
ns=env/compilation
sort-key=b3

[env=fcflags_prec]
compulsory=false
description=Fortran compiler flags for precision.
help=A space-separated list of Fortran compiler flags specifically
    =intended to set computational precision in memory.
    =
    =Setting this variable will replace any existing default flags.
ns=env/compilation
sort-key=b2

[env=fpp]
compulsory=false
description=Fortran preprocessor.
help=The name or full path to the Fortran preprocessor.
ns=env/keys
sort-key=b1

[env=fppflags]
compulsory=false
description=Fortran preprocessor flags.
help=A space-separated list of Fortran preprocessor flags.
    =
    =Setting this variable will replace any existing default flags.
ns=env/keys
sort-key=b2

[env=gcom_path]
compulsory=false
description=GCOM library path.
help=The path to the GCOM library.
    =
    =Setting this variable will replace the existing default path.
ns=env/paths
sort-key=b1

[env=grib_api_path]
compulsory=false
description=GRIB API installation path.
help=The path to the GRIB API installation, not including the include, lib,
    =etc. directories.
    =
    =Setting this variable will replace any existing default GRIB API path.
ns=env/paths
sort-key=c1

[env=include_config]
compulsory=true
description=fcm-make config file.
help=The path to the fcm-make config file.
    =
    =If specifying a repository location this should include a revision,
    =otherwise "HEAD" will be used. This could also be a working copy.
    =
    =When providing a path to a working copy, the path must be visible to
    =the machine where the fcm_make task (NOT the fcm_make2 task, if
    =present) is run. If this is not the case, prefix the path with the
    =hostname of the machine where the working copy is located, e.g.
    =    myhost:/data/local/user/vn9.1_working_copy/fcm-make/...
ns=env/config
sort-key=a1

[env=jules_base]
compulsory=false
description=JULES base extract source.
help=The basename for the extract of the JULES source code.
    =Defaults to "trunk". Unless a project tree is explicitly named
    =this is assumed to be relative to the location defined by the
    ="fcm:jules" keyword URL.
    =
    =This is the source code against which your branches, working
    =copies etc. will be compared against and merged with prior to the
    =build. To build directly from a branch instead of merging changes
    =into the trunk, use e.g.
    =    branches/dev/user/um9.0_trunk_override.
    =
    =You may also use FCM keywords or Subversion URLs here.
    =
    =Use env=jules_rev to specify the revision of the base extract.
ns=env/extract
sort-key=b1

[env=jules_rev]
compulsory=false
description=JULES base extract revision.
help=The revision of the base extract for the JULES source code.
    =Defaults to "head".
    =
    =You may use FCM keywords (um9.0) or revision numbers (12345) here.
    =
    =The base extract source location is specified with env=jules_base.
ns=env/extract
pattern=(?i)^((um|vn)\d+\.\d+|\d+|head)$
sort-key=b2

[env=jules_sources]
compulsory=true
description=JULES branches and/or working copies.
help=When extracting the JULES source, merge in source code from the locations
    =and revisions listed here. These can be branches, working copies or even
    =the trunk. The merge is relative to the source code specified by
    =env=jules_base at the revision env=jules_rev.
    =
    =Complete FCM or Subversion URLs, or directory paths, may be used.
    =If only a partial path is provided this is assumed to be relative to the
    =project tree associated with the env=jules_base source location. For
    =example, if the base extract is associated with the project tree defined
    =by the "fcm:jules" keyword URL, then
    =    branches/dev/user/um9.1_testing
    =is equivalent to
    =    fcm:jules/branches/dev/user/um9.1_testing.
    =
    =Use "@" to specify the revision of a repository location, e.g.
    =    branches/dev/user/um9.1_testing@67890.
    =If a revision is not provided for a repository-based location,
    ="head" is assumed.
    =
    =When providing a path to a working copy, the path must be visible to
    =the machine where the extract step takes place. If this is not the case,
    =prefix the path with the hostname of the machine where the working copy
    =is located, e.g.
    =    myhost:/data/local/user/um9.1_working_copy.
ns=env/extract
sort-key=b3
type=spaced_list

[env=keys_atmos]
compulsory=false
description=All CPP keys for the atmosphere build.
help=A list of all CPP keys used to preprocess the atmosphere executable.
    =By default this is the sum of the two lists env=keys_platform and
    =env=keys_atmos_app. If provided, this supersedes both lists.
    =
    =Setting this variable will replace any existing list of CPP keys.
    =
    =When editing OpenMP settings (C98) you should ensure that env=fcflags_omp
    =and env=ldflags_omp are set appropriately.
ns=env/keys
sort-key=d2
type=spaced_list

[env=keys_atmos_app]
compulsory=false
description=Scientific and technical keys for the atmosphere build.
help=A list of CPP keys used to preprocess the atmosphere executable.
    =These flags typically contain settings required by a particular
    =UM setup (e.g. flags for OpenMP or JULES) but not tied to a given platform.
    =
    =Setting this variable will replace any existing list of CPP keys.
    =
    =When editing OpenMP settings (C98) you should ensure that env=fcflags_omp
    =and env=ldflags_omp are set appropriately.
ns=env/keys
sort-key=d1
type=spaced_list

[env=keys_platform]
compulsory=false
description=Platform-dependent keys for all builds.
help=A list of CPP keys specific to this platform. These keys are always
    =applied and rarely if ever change between builds.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=c1
type=spaced_list

[env=keys_recon]
compulsory=false
description=All CPP keys for the reconfiguration build.
help=A list of all CPP keys used to preprocess the reconfiguration executable.
    =By default this is the sum of the two lists env=keys_platform and
    =env=keys_recon_app. If provided, this supersedes both lists.
    =
    =Setting this variable will replace any existing list of CPP keys.
    =
    =When editing OpenMP settings (C98) you should ensure that env=fcflags_omp
    =and env=ldflags_omp are set appropriately.
ns=env/keys
sort-key=e2
type=spaced_list

[env=keys_recon_app]
compulsory=false
description=Scientific and technical keys for the reconfiguration build.
help=A list of CPP keys used to preprocess the reconfiguration executable.
    =These flags typically contain settings required by a particular
    =UM setup (e.g. flags for OpenMP or JULES) but not tied to a given platform.
    =
    =Setting this variable will replace any existing list of CPP keys.
    =
    =When editing OpenMP settings (C98) you should ensure that env=fcflags_omp
    =and env=ldflags_omp are set appropriately.
ns=env/keys
sort-key=e1
type=spaced_list

[env=keys_scm]
compulsory=false
description=All CPP keys for the SCM build.
help=A list of all CPP keys used to preprocess the SCM executable.
    =By default this is the sum of the two lists env=keys_platform and
    =env=keys_scm_app. If provided, this supersedes both lists.
    =
    =Setting this variable will replace any existing list of CPP keys.
    =
    =When editing OpenMP settings (C98) you should ensure that env=fcflags_omp
    =and env=ldflags_omp are set appropriately.
ns=env/keys
sort-key=f2
type=spaced_list

[env=keys_scm_app]
compulsory=false
description=Scientific and technical keys for the SCM build.
help=A list of CPP keys used to preprocess the SCM executable.
    =These flags typically contain settings required by a particular
    =UM setup (e.g. flags for OpenMP or JULES) but not tied to a given platform.
    =
    =Setting this variable will replace any existing list of CPP keys.
    =
    =When editing OpenMP settings (C98) you should ensure that env=fcflags_omp
    =and env=ldflags_omp are set appropriately.
ns=env/keys
sort-key=f1
type=spaced_list

[env=ldflags_omp]
compulsory=false
description=Fortran OpenMP library flags.
help=A space-separated list of Fortran compiler flags for linking in an
    =OpenMP library.
    =
    =When running without OpenMP this is typically left blank.
    =
    =Setting this variable will replace any existing default flags.
    =
    =When enabling/disabling OpenMP you should also ensure that the
    =CPP key 'C98' is set appropriately:
    = - 0A: Compiling without OpenMP
    = - 1A: Compiling with OpenMP
    =
    =CPP keys should be changed in the appropriate variable:
    = - Atmosphere:      env=keys_atmos_app or env=keys_atmos
    = - Reconfiguration: env=keys_recon_app or env=keys_recon
    = - SCM:             env=keys_scm_app   or env=keys_scm
ns=env/compilation
sort-key=c2

[env=ldgcom_omp]
compulsory=false
description=Fortran OpenMP library flags for GCOM.
help=A space-separated list of Fortran compiler flags for linking OpenMP into
    =the GCOM library.
    =
    =If GCOM has been compiled with OpenMP then the OpenMP library should be
    =linked into the GCOM library separately from the UM builds. These flags
    =are defined separately to allow a GCOM library built with OpenMP to be
    =used with a UM executable built without OpenMP.
    =
    =Setting this variable will replace any existing default flags.
ns=env/compilation
sort-key=c3

[env=mirror_steplist]
compulsory=false
description=Steplist for the remote platform.
help=A space-separated list of compile steps to perform on the remote
    =platform. These are performed after the code has been extracted on the
    =local platform and mirrored to the remote platform.
    =
    =This should be a list of preprocess-* and build-* instructions for the
    =executable(s) being compiled. For example, when compiling both the
    =reconfiguration and atmosphere executables this is set to:
    =
    =    preprocess-atmos build-atmos preprocess-recon build-recon
    =
    =In this case compilation of the reconfiguration can be disabled by
    =providing this variable without the two *-recon steps.
    =
    =Setting this variable will replace the existing remote steplist.
    =
    =
    =Mirroring FCM configuration files:
    =
    =In addition to mirroring the source code, the mirror step also transfers
    =the FCM config files that contain the preprocess and build instructions
    =to the remote platform. These config files are generated by the fcm_make
    =task and then used by the corresponding fcm_make2 task.
    =
    =If you edit the list of preprocess or build steps for a remote platform
    =you must also include the mirror step so that the updated config files are
    =transferred across, even if no extract is required. Failure to do so would
    =result in no update of the FCM config files on the remote platform, and
    =the revised preprocess and build list would not take effect.
ns=env/config
sort-key=e2
type=spaced_list

[env=netcdf_inc_path]
compulsory=false
description=NetCDF include files path.
help=The path to the include files of a NetCDF installation.
    =
    =Setting this variable will replace any existing default path. It will
    =also override the path specified by env=netcdf_path for using NetCDF
    =include files. If both variables are provided this path takes precedence.
ns=env/paths
#trigger = env=netcdf_path: ;
sort-key=a2

[env=netcdf_lib_path]
compulsory=false
description=NetCDF library files path.
help=The path to the library files of a NetCDF installation.
    =
    =Setting this variable will replace any existing default path. It will
    =also override the path specified by env=netcdf_path for using NetCDF
    =library files. If both variables are provided this path takes precedence.
ns=env/paths
#trigger = env=netcdf_path: ;
sort-key=a3

[env=netcdf_path]
compulsory=false
description=NetCDF installation root path.
help=The path to the top level of the NetCDF installation.
    =The relative paths to the include and library files are defined
    =in the relevant compiler configuration file, e.g.
    =    fcm-make/meto-pwr7-xlf/inc/pwr7-*.cfg
    =Using this variable assumes these relative paths are correct.
    =
    =In some cases the relative paths may differ between NetCDF installations,
    =for example when changing from an installation which uses
    =    $netcdf_path/include
    =to another installation which uses
    =    $netcdf_path/inc
    =
    =If you need to specify either of these paths in full, use
    =env=netcdf_inc_path and env=netcdf_lib_path instead.
    =Those variables will override the path to either the include or library
    =files defined here, as appropriate.
ns=env/paths
sort-key=a1

[env=prism_path]
compulsory=false
description=PRISM library path.
help=The path to the PRISM library, used for coupling with OASIS.
    =
    =Setting this variable will replace any existing default path.
ns=env/paths
sort-key=d1

[env=recon_exec]
compulsory=false
description=Reconfiguration executable name.
help=The name of the reconfiguration executable to be built.
    =
    =The default value is set in the 'common' UM fcm-make configs.
ns=env/build
sort-key=d1

[env=scm_exec]
compulsory=false
description=SCM executable name.
help=The name of the Single Column Model executable to be built.
    =
    =The default value is set in the 'common' UM fcm-make configs.
ns=env/build
sort-key=e1

[env=steplist]
compulsory=false
description=Steplist for the local platform.
help=A space-separated list of compile steps to perform on the local
    =platform.
    =
    =For a single-platform build this is normally all the steps
    =required to compile an executable. For example, when compiling both the
    =reconfiguration and atmosphere executables this is set to:
    =
    =    extract preprocess-atmos build-atmos preprocess-recon build-recon
    =
    =In this case compilation of the reconfiguration can be disabled by
    =providing this variable without the two *-recon steps.
    =
    =For a two-platform build this normally consists only of extract and mirror
    =steps:
    =
    =    extract mirror
    =
    =In this case rebuilding an executable without re-extracting the code
    =could be achieved by removing the extract step.
    =
    =Setting this variable will replace the existing local steplist.
ns=env/config
sort-key=e1
type=spaced_list

[env=um_base]
compulsory=false
description=UM base extract source.
help=The basename for the extract of the UM source code.
    =Defaults to "trunk". Unless a project tree is explicitly named
    =this is assumed to be relative to the location defined by the
    ="fcm:um" keyword URL.
    =
    =This is the source code against which your branches, working
    =copies etc. will be compared against and merged with prior to the
    =build. To build directly from a branch instead of merging changes
    =into the trunk, use e.g.
    =    branches/dev/user/vn9.0_trunk_override.
    =
    =You may also use FCM keywords or Subversion URLs here.
    =
    =Use env=um_rev to specify the revision of the base extract.
ns=env/extract
sort-key=a1

[env=um_rev]
compulsory=false
description=UM base extract revision.
help=The revision of the base extract for the UM source code.
    =Defaults to "head".
    =
    =You may use FCM keywords (vn9.0) or revision numbers (12345) here.
    =
    =The base extract source location is specified with env=um_base.
ns=env/extract
pattern=(?i)^(vn\d+\.\d+|\d+|head)$
sort-key=a2

[env=um_sources]
compulsory=true
description=UM branches and/or working copies.
help=When extracting the UM source, merge in source code from the locations
    =and revisions listed here. These can be branches, working copies or even
    =the trunk. The merge is relative to the source code specified by
    =env=um_base at the revision env=um_rev.
    =
    =Complete FCM or Subversion URLs, or directory paths, may be used.
    =If only a partial path is provided this is assumed to be relative to the
    =project tree associated with the env=um_base source location. For
    =example, if the base extract is associated with the project tree defined
    =by the "fcm:um" keyword URL, then
    =    branches/dev/user/vn9.1_testing
    =is equivalent to
    =    fcm:um/branches/dev/user/vn9.1_testing.
    =
    =Use "@" to specify the revision of a repository location, e.g.
    =    branches/dev/user/vn9.1_testing@67890.
    =If a revision is not provided for a repository-based location,
    ="head" is assumed.
    =
    =When providing a path to a working copy, the path must be visible to
    =the machine where the extract step takes place. If this is not the case,
    =prefix the path with the hostname of the machine where the working copy
    =is located, e.g.
    =    myhost:/data/local/user/vn9.1_working_copy.
ns=env/extract
sort-key=a3
type=spaced_list
