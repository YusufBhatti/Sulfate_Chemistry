[env:build]
compulsory=false
description=Basic compilation settings.
ns=env/build
sort-key=d
title=Basic compilation

[env:compilation]
compulsory=false
description=Override default compilers and compiler flags.
ns=env/compilation
sort-key=g
title=Advanced compilation

[env:config]
compulsory=false
description=Select the fcm-make configuration files.
ns=env/config
sort-key=a
title=Configuration file

[env:extract]
compulsory=false
description=Source extract locations.
ns=env/extract
sort-key=c
title=Sources

[env:keys]
compulsory=false
description=Platform- and build-specific preprocessing.
ns=env/keys
sort-key=f
title=Preprocessing

[env:paths]
compulsory=false
description=External include and library paths.
ns=env/paths
sort-key=e
title=External libraries

[env:steps]
compulsory=false
description=Extract, mirror and compilation steps.
ns=env/steps
sort-key=b
title=Make steps

[env=atmos_exec]
compulsory=false
description=Atmosphere executable name.
help=The name of the atmosphere executable to be built.
    =
    =The default value is set in the 'common' UM fcm-make configs.
ns=env/build
sort-key=c1

[env=cc]
compulsory=false
description=C compiler.
help=The name or full path to the C compiler.
ns=env/compilation
sort-key=a1

[env=ccflags]
compulsory=false
description=C compiler flags.
help=A space-separated list of C compiler flags.
    =
    =Setting this variable will replace any existing default flags.
ns=env/compilation
sort-key=a2

[env=compile_atmos]
compulsory=true
description=Compile atmosphere source.
help=Preprocess and build the atmosphere source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=02a
value-titles=yes,no
values=preprocess-atmos build-atmos,

[env=compile_convieee]
compulsory=true
description=Compile convieee source.
help=Preprocess and build the convieee source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=12a
value-titles=yes,no
values=preprocess-convieee build-convieee,

[env=compile_convpp]
compulsory=true
description=Compile convpp source.
help=Preprocess and build the convpp source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=13a
value-titles=yes,no
values=preprocess-convpp build-convpp,

[env=compile_createbc]
compulsory=true
description=Compile CreateBC source.
help=Preprocess and build the CreateBC source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=05a
value-titles=yes,no
values=preprocess-createbc build-createbc,

[env=compile_crmstyle_coarse_grid]
compulsory=true
description=Compile crmstyle_coarse_grid source.
help=Preprocess and build the crmstyle_coarse_grid source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=14a
value-titles=yes,no
values=preprocess-crmstyle_coarse_grid build-crmstyle_coarse_grid,

[env=compile_cumf]
compulsory=true
description=Compile cumf source.
help=Preprocess and build the cumf source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=07a
value-titles=yes,no
values=preprocess-cumf build-cumf,

[env=compile_fieldcalc]
compulsory=true
description=Compile fieldcalc source.
help=Preprocess and build the fieldcalc source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=09a
value-titles=yes,no
values=preprocess-fieldcalc build-fieldcalc,

[env=compile_fieldcos]
compulsory=true
description=Compile fieldcos source.
help=Preprocess and build the fieldcos source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=11a
value-titles=yes,no
values=preprocess-fieldcos build-fieldcos,

[env=compile_fieldmod]
compulsory=true
description=Compile fieldmod source.
help=Preprocess and build the fieldmod source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=17a
value-titles=yes,no
values=preprocess-fieldmod build-fieldmod,

[env=compile_fieldop]
compulsory=true
description=Compile fieldop source.
help=Preprocess and build the fieldop source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=16a
value-titles=yes,no
values=preprocess-fieldop build-fieldop,

[env=compile_frames]
compulsory=true
description=Compile frames source.
help=Preprocess and build the frames source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=08a
value-titles=yes,no
values=preprocess-frames build-frames,

[env=compile_makebc]
compulsory=true
description=Compile MakeBC source.
help=Preprocess and build the MakeBC source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=05b
value-titles=yes,no
values=preprocess-makebc build-makebc,

[env=compile_pptoanc]
compulsory=true
description=Compile pptoanc source.
help=Preprocess and build the pptoanc source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=15a
value-titles=yes,no
values=preprocess-pptoanc build-pptoanc,

[env=compile_pumf]
compulsory=true
description=Compile pumf source.
help=Preprocess and build the pumf source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=06a
value-titles=yes,no
values=preprocess-pumf build-pumf,

[env=compile_recon]
compulsory=true
description=Compile reconfiguration source.
help=Preprocess and build the reconfiguration source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=03a
value-titles=yes,no
values=preprocess-recon build-recon,

[env=compile_scm]
compulsory=true
description=Compile SCM source.
help=Preprocess and build the SCM source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=04a
value-titles=yes,no
values=preprocess-scm build-scm,

[env=compile_vomext]
compulsory=true
description=Compile vomext source.
help=Preprocess and build the vomext source code.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=10a
value-titles=yes,no
values=preprocess-vomext build-vomext,

[env=config_revision]
compulsory=true
description=Config file revision.
help=The revision of the config file in the repository. This must start with "@",
    =e.g. @HEAD. You may use FCM keywords (@vn10.0) or revision numbers
    =(@12345) here.
    =
    =If using a config file in a working copy, leave this field blank.
    =
    =Leaving this field blank when not using a working copy is equivalent to
    =supplying @HEAD.
ns=env/config
pattern=(?i)^(|@(vn\d+\.\d+(\.\d+)?|\d+|head))$
sort-key=a4

[env=config_root_path]
compulsory=true
description=Path to the fcm-make configs directory.
help=Path to the UM's fcm-make directory, containing the build configs.
    =This can be an FCM or Subversion URL or a path to a working copy.
    =It should not include the fcm-make directory itself, e.g.
    =   fcm:um.xm/trunk
    =is a valid path.
    =
    =When working with the shared repository this must point to the
    =local mirror of the repository, not the shared repository itself.
    =
    =When providing a path to a working copy, the path must be visible to
    =the machine where the fcm_make task (NOT the fcm_make2 task, if
    =present) is run. If this is not the case, prefix the path with the
    =hostname of the machine where the working copy is located, e.g.
    =    myhost:/data/local/user/vn10.0_working_copy.
ns=env/config
sort-key=a3

[env=config_type]
compulsory=true
description=Type of executable(s).
help=An identifier for the type of executable(s) that you wish to build from
    =the UM source code. Available types are:
    =
    =    Atmosphere and/or reconfiguration executables.
    =    Single Column Model executable.
    =    CreateBC executable.
    =    Parallel UM utilities. Currently only um-crmstyle_coarse_grid.
    =    Serial UM utilities, e.g. um-pumf, um-cumf, (except CreateBC).
    =    32-bit serial UM utilities, e.g. um-convpp, um-pumf, um-cumf.
    =
    =These choices correspond to the types of config file available in
    =the relevant env=platform_config_dir directory.
    =
    =The list of executables to preprocess and build can be adjusted by
    =choosing appropriate settings in the Make steps panel, or overridden
    =completely using env=steplist for builds on the local platform, or
    =env=mirror_steplist for builds on a remote platform.
    =
    =
    =BUILD NOTES:
    =
    =JULES/non-JULES builds:
    =
    =For builds that use JULES, the fcm_make app's file/fcm-make.cfg file
    =contains a line:
    =    extract.location{diff}[jules] =  $jules_sources
    =which is used to apply the JULES source code changes in env=jules_sources
    =to your build. When present, this is typically the last line in the file.
    =
    =When switching between builds that do or do not use JULES, such as between
    =an atmosphere and a small utility build, you may need to add or remove
    =this line to your fcm-make.cfg file, as appropriate. Failure to do so
    =may result in either "name-spaces declared but not used" errors, or any
    =JULES sources listed in env=jules_sources not being applied to the build.
    =
    =Serial reconfiguration:
    =
    =To build the serial reconfiguration you should:
    =
    =    - Set this switch to atmosphere/reconfiguration
    =          (and disable env=compile_atmos).
    =    - Add the RECON_SERIAL=recon_serial flag to env=keys_recon_app.
    =    - Choose a suitable serial GCOM library with env=gcom_path and,
    =          if necessary, alter the GCOM OpenMP settings with env=ldgcom_omp.
    =    - Set the appropriate serial Fortran compiler with env=fc.
    =
    =Depending on your site's fcm-make settings, other changes to adjust the
    =preprocessor or compiler flags may be necessary.
    =
    =If there is no particular need to generate a serial executable you may
    =find it simpler to run the standard (parallel) reconfiguration on one
    =processor, which should produce the same results.
ns=env/config
sort-key=a2
trigger=env=compile_atmos: atmos;
       =env=compile_recon: atmos;
       =env=compile_scm: scm;
       =env=compile_convpp: utils-serial-32B;
       =env=compile_createbc: createbc;
       =env=compile_cumf: utils-serial, utils-serial-32B;
       =env=compile_pumf: utils-serial, utils-serial-32B;
       =env=compile_makebc: utils-serial;
       =env=compile_frames: utils-serial;
       =env=compile_fieldcalc: utils-serial;
       =env=compile_vomext: utils-serial;
       =env=compile_fieldcos: utils-serial;
       =env=compile_convieee: utils-serial;
       =env=compile_pptoanc: utils-serial;
       =env=compile_fieldop: utils-serial;
       =env=compile_fieldmod: utils-serial;
       =env=compile_crmstyle_coarse_grid: utils-mpp;
       =env=keys_atmos: atmos;
       =env=keys_atmos_app: atmos;
       =env=keys_recon: atmos;
       =env=keys_recon_app: atmos;
       =env=keys_scm: scm;
       =env=keys_scm_app: scm;
       =env=atmos_exec: atmos;
       =env=recon_exec: atmos;
       =env=scm_exec: scm;
       =env=jules_project_location: atmos, scm;
       =env=jules_base: atmos, scm;
       =env=jules_rev: atmos, scm;
       =env=jules_sources: atmos, scm;
value-titles=atmosphere/reconfiguration,single column model,CreateBC,parallel utilities,serial utilities,32-bit serial utilities
values=atmos,scm,createbc,utils-mpp,utils-serial,utils-serial-32B
widget[rose-config-edit]=rose.config_editor.valuewidget.radiobuttons.RadioButtonsValueWidget

[env=cpp]
compulsory=false
description=C preprocessor.
help=The name or full path to the C preprocessor.
ns=env/keys
sort-key=a1

[env=cppflags]
compulsory=false
description=C preprocessor flags.
help=A space-separated list of C preprocessor flags.
    =
    =Setting this variable will replace any existing default flags.
ns=env/keys
sort-key=a2

[env=drhook]
compulsory=true
description=Compile with Dr Hook.
help=Choose whether to apply Dr Hook compiler and library flags to the build.
    =When compiling with Dr Hook you should disable any prebuilds (or use a
    =prebuild compiled with Dr Hook); this prevents the dummy Dr Hook libraries
    =(which are contained in the UM) from being used in place of the actual
    =libraries.
    =
    =Dr Hook is a library written by ECMWF which can produce run-time profiling
    =information such as:
    =
    = - Per-routine profiling information based on walltime, CPU-time and
    =      Mflops.
    = - Tracebacks in the event of code failure. A developer can force a
    =      traceback at any point in the code with an appropriate call to the
    =      Dr Hook library.
    = - Memory usage information.
    =
    =Output from Dr Hook is configured from the "Dr Hook Settings" panel in the
    ="env" section of a UM runtime app.
    =
    =NOTE: If you wish to compile with Dr Hook and you are also setting a
    =variable that replaces the list of C preprocessor macros used by your
    =compilation, such as env=keys_atmos or env=keys_recon, you must
    =explicitly add DRHOOK=drhook to the list of keys provided.
ns=env/build
sort-key=a4
value-titles=off,on,defined by suite
values=drhook_off,drhook_on,$DRHOOK
warn-if=this == 'drhook_on' and env=prebuild; # Deactivate prebuilds or use a prebuild compiled with Dr Hook

[env=external_modules]
compulsory=false
description=External Fortran module dependencies.
help=A list of Fortran module dependencies from external libraries.
    =
    =If your build includes changes to the source code that require new Fortran
    =modules from an external library, list those module dependencies here.
    =This instructs FCM not to search for those modules in the source code,
    =which would cause the build source analysis to fail with missing
    =dependencies.
ns=env/compilation
#sort-key=c3
type=spaced_list

[env=extract]
compulsory=true
description=Extract the source code.
help=Extract source code from the selected locations.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
ns=env/steps
sort-key=01a
value-titles=yes,no
values=extract,

[env=fc]
compulsory=false
description=Fortran compiler.
help=The name or full path to the Fortran compiler.
ns=env/compilation
sort-key=b1

[env=fcflags_omp]
compulsory=false
description=Fortran OpenMP compiler flags.
help=A space-separated list of Fortran compiler flags specifically
    =intended for activating or deactivating OpenMP.
    =
    =When running without OpenMP this is typically left blank.
    =
    =Setting this variable will override the OpenMP setting at env=openmp
    =and replace any existing default flags.
ns=env/compilation
sort-key=d1

[env=fcflags_overrides]
compulsory=true
description=Fortran compiler overrides.
help=A space-separated list of Fortran compiler flags specifically
    =intended for overriding the default compilation flags.
    =
    =These flags are appended to the normal compilation settings and will
    =override any applicable existing settings.
    =
    =
    =Inter-variable dependencies:
    =
    =Variables defined in the [env] section of an app cannot refer to other
    =variables defined in the [env] section of that app (nor to variables
    =defined in the central fcm-make config files). If you want to refer to
    =an existing [env] variable (e.g. an include path) you must either expand
    =it in full wherever it is used, or you may use it directly in the
    =file/fcm-make.cfg file. Any variables defined using the latter method
    =must be defined before the include statement.
ns=env/compilation
sort-key=b3

[env=fcflags_prec]
compulsory=false
description=Fortran compiler flags for precision.
help=A space-separated list of Fortran compiler flags specifically
    =intended to set computational precision in memory.
    =
    =Setting this variable will replace any existing default flags.
ns=env/compilation
sort-key=b2

[env=fpp]
compulsory=false
description=Fortran preprocessor.
help=The name or full path to the Fortran preprocessor.
ns=env/keys
sort-key=b1

[env=fppflags]
compulsory=false
description=Fortran preprocessor flags.
help=A space-separated list of Fortran preprocessor flags.
    =
    =Setting this variable will replace any existing default flags.
ns=env/keys
sort-key=b2

[env=gcom_path]
compulsory=false
description=GCOM library path.
help=The path to the GCOM library.
    =
    =Setting this variable will replace the existing default path.
    =
    =If you wish to use mpp, serial and 32B_serial versions from a
    =new GCOM installation, in the same suite, then use
    =env=gcom_root_path instead.
    =
    =Setting this variable will replace the existing default GCOM library path.
    =If both this variable and env=gcom_root_path are present, this variable
    =takes precedence.
    =
    =If the new GCOM library was built with different OpenMP settings to the
    =default library then you may need to override the GCOM OpenMP library flags
    =env=ldgcom_omp.
ns=env/paths
sort-key=b1

[env=gcom_root_path]
compulsory=false
description=GCOM top-level installation path.
help=The path to the top level of a GCOM installation.
    =
    =This should be used to set the root installation directory of a
    =GCOM installation. When using multiple GCOM libraries
    =(e.g. mpp, serial and 32B_serial libraries) the paths to the
    =individual libraries will be taken relative to this location.
    =
    =Setting this variable will replace the existing default root
    =installation path. If both this variable and env=gcom_path are present,
    =env=gcom_path takes precedence.
ns=env/paths
sort-key=b1

[env=grib_api_path]
compulsory=false
description=GRIB API installation path.
help=The path to the GRIB API installation, not including the include, lib,
    =etc. directories.
    =
    =Setting this variable will replace any existing default GRIB API path.
ns=env/paths
sort-key=c1

[env=jules_base]
compulsory=false
description=JULES base extract source.
help=The basename for the extract of the JULES source code, i.e. the
    =place in the JULES project tree to take the primary extract from,
    =such as the trunk or a branch. Defaults to "trunk".
    =
    =Unless a path to a Subversion repository is specified this is taken
    =to be relative to the location defined by env=jules_project_location.
    =
    =This is the source code against which your branches, working
    =copies etc. will be compared against and merged with prior to the
    =build. To build directly from a branch instead of merging changes
    =into the trunk, use e.g.
    =    branches/dev/user/um10.0_trunk_override.
    =
    =Use env=jules_rev to specify the revision of the base extract.
    =
    =Using an FCM keyword or Subversion URL here will override the value
    =of env=jules_project_location for the primary extract only (i.e. not
    =for any branches). If all your source code lies in a different
    =repository, modify that variable instead.
ns=env/extract
sort-key=b2

[env=jules_project_location]
compulsory=false
description=Location of the JULES project.
help=The location of the JULES project tree, in a Subversion repository.
    =This can be an FCM keyword, a Subversion URL or a file path.
    =Defaults to "fcm:jules.xm".
    =
    =When working with the shared repository this must point to the
    =local mirror of the repository, not the shared repository itself.
    =
    =Unless explicitly specified with a full path to a repository,
    =the values of env=jules_base and env=jules_sources are taken relative
    =to this location.
ns=env/extract
sort-key=b1

[env=jules_rev]
compulsory=true
description=JULES base extract revision.
help=The revision of the base extract for the JULES source code.
    =Defaults to "head".
    =
    =You may use FCM keywords (um10.0) or revision numbers (12345) here.
    =
    =The base extract source location is specified with env=jules_base.
ns=env/extract
pattern=(?i)^((um|vn)\d+\.\d+(\.\d+)?|\d+|head)$
sort-key=b3

[env=jules_sources]
compulsory=true
description=JULES branches and/or working copies.
help=When extracting the JULES source, merge in source code from the locations
    =and revisions listed here. These can be branches, working copies or even
    =the trunk. The merge is relative to the source code specified by
    =env=jules_base at the revision env=jules_rev.
    =
    =Complete FCM or Subversion URLs, or directory paths, may be used.
    =If only a partial path is provided this is taken to be relative to the
    =project tree associated with env=jules_project_location. For example, if
    =the project location is specified by the "fcm:jules.xm" keyword URL, then
    =    branches/dev/user/um10.0_testing
    =is equivalent to
    =    fcm:jules.xm/branches/dev/user/um10.0_testing.
    =
    =If a complete URL is specified then when working with the shared
    =repository this must point to the local mirror of the repository,
    =not the shared repository itself.
    =
    =Use "@" to specify the revision of a repository location, e.g.
    =    branches/dev/user/um10.0_testing@67890.
    =If a revision is not provided for a repository-based location,
    ="head" is assumed.
    =
    =When providing a path to a working copy, the path must be visible to
    =the machine where the extract step takes place. If this is not the case,
    =prefix the path with the hostname of the machine where the working copy
    =is located, e.g.
    =    myhost:/data/local/user/um10.0_working_copy.
ns=env/extract
sort-key=b4
type=spaced_list

[env=keys_atmos]
compulsory=false
description=All CPP keys for the atmosphere build.
help=A list of all CPP keys used to preprocess the atmosphere executable.
    =By default this is the sum of the two lists env=keys_platform and
    =env=keys_atmos_app. If provided, this supersedes both lists.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=d2
type=spaced_list

[env=keys_atmos_app]
compulsory=false
description=Scientific and technical keys for the atmosphere build.
help=A list of CPP keys used to preprocess the atmosphere executable.
    =These flags typically contain settings required by a particular
    =UM setup (e.g. flags for JULES) but not tied to a given platform.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=d1
type=spaced_list

[env=keys_platform]
compulsory=false
description=Platform-dependent keys for all builds.
help=A list of CPP keys specific to this platform. These keys are always
    =applied and rarely if ever change between builds.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=c1
type=spaced_list

[env=keys_recon]
compulsory=false
description=All CPP keys for the reconfiguration build.
help=A list of all CPP keys used to preprocess the reconfiguration executable.
    =By default this is the sum of the two lists env=keys_platform and
    =env=keys_recon_app. If provided, this supersedes both lists.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=e2
type=spaced_list

[env=keys_recon_app]
compulsory=false
description=Scientific and technical keys for the reconfiguration build.
help=A list of CPP keys used to preprocess the reconfiguration executable.
    =These flags typically contain settings required by a particular
    =UM setup (e.g. flags for JULES) but not tied to a given platform.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=e1
type=spaced_list

[env=keys_scm]
compulsory=false
description=All CPP keys for the SCM build.
help=A list of all CPP keys used to preprocess the SCM executable.
    =By default this is the sum of the two lists env=keys_platform and
    =env=keys_scm_app. If provided, this supersedes both lists.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=f2
type=spaced_list

[env=keys_scm_app]
compulsory=false
description=Scientific and technical keys for the SCM build.
help=A list of CPP keys used to preprocess the SCM executable.
    =These flags typically contain settings required by a particular UM setup
    =(e.g. flags for the SCM or JULES) but not tied to a given platform.
    =
    =Setting this variable will replace any existing list of CPP keys.
ns=env/keys
sort-key=f1
type=spaced_list

[env=ldflags_omp]
compulsory=false
description=Fortran OpenMP library flags.
help=A space-separated list of Fortran compiler flags for linking in an
    =OpenMP library.
    =
    =When running without OpenMP this is typically left blank.
    =
    =Setting this variable will override the OpenMP setting at env=openmp
    =and replace any existing default flags.
ns=env/compilation
sort-key=d2

[env=ldflags_overrides_prefix]
compulsory=true
description=Fortran library flags to add as a prefix.
help=A space-separated list of Fortran library flags to add to the linker
    =options. These flags are added as a prefix to the existing argument list.
    =
    =Any linker options which must go at the beginning of the argument list,
    =such as paths to libraries that should come first in the search path,
    =should be applied using this option.
    =
    =Linker options that must go at the end of the argument list should be
    =applied with [env=ldflags_overrides_suffix]. Any entirely new libraries or
    =options without existing precedent may be applied with either variable.
    =
    =
    =Inter-variable dependencies:
    =
    =Variables defined in the [env] section of an app cannot refer to other
    =variables defined in the [env] section of that app (nor to variables
    =defined in the central fcm-make config files). If you want to refer to
    =an existing [env] variable (e.g. a library path) you must either expand it
    =in full wherever it is used, or you may use it directly in the
    =file/fcm-make.cfg file. Any variables defined using the latter method
    =must be defined before the include statement.
ns=env/compilation
sort-key=c1

[env=ldflags_overrides_suffix]
compulsory=true
description=Fortran library flags to add as a suffix.
help=A space-separated list of Fortran library flags to add to the linker
    =options. These flags are added as a suffix to the existing argument list.
    =
    =Any linker options which must go at the end of the argument list, such as
    =flags which are needed to override existing (default) flags, should be
    =applied using this option.
    =
    =Linker options that must go at the start of the argument list should be
    =applied with [env=ldflags_overrides_prefix]. Any entirely new libraries or
    =options without existing precedent may be applied with either variable.
    =
    =
    =Inter-variable dependencies:
    =
    =Variables defined in the [env] section of an app cannot refer to other
    =variables defined in the [env] section of that app (nor to variables
    =defined in the central fcm-make config files). If you want to refer to
    =an existing [env] variable (e.g. a library path) you must either expand it
    =in full wherever it is used, or you may use it directly in the
    =file/fcm-make.cfg file. Any variables defined using the latter method
    =must be defined before the include statement.
ns=env/compilation
sort-key=c2

[env=ldgcom_omp]
compulsory=false
description=Fortran OpenMP library flags for GCOM.
help=A space-separated list of Fortran compiler flags for linking OpenMP into
    =the GCOM library.
    =
    =If GCOM has been compiled with OpenMP then the OpenMP library must be
    =linked in to the UM executable, even if the UM itself was compiled without
    =OpenMP.
    =
    =By default the UM fcm-make configuration files will resolve this
    =dependency automatically, but if you use a GCOM library (specifying
    =env=gcom_path or env=gcom_root_path) with different OpenMP settings you
    =may need to specify the GCOM OpenMP library flags manually.
    =
    =If the custom library uses OpenMP, provide the relevant library flags here.
    =If the custom library does not use OpenMP, you may omit this variable
    =or leave it blank.
ns=env/compilation
sort-key=d3

[env=mirror]
compulsory=true
description=Mirror extracted source code.
help=Mirror the extracted source code to a remote platform.
    =The mirror target is the host of the corresponding fcm_make2 task.
    =
    =If provided, env=steplist and/or env=mirror_steplist will override
    =individual make step settings.
    =
    =
    =Mirroring FCM configuration files:
    =
    =In addition to mirroring the source code, the mirror step also transfers
    =the FCM config files that contain the preprocess and build instructions
    =to the remote platform. These config files are generated by the fcm_make
    =task and then used by the corresponding fcm_make2 task.
    =
    =If you edit the list of preprocess or build steps for a remote platform
    =you must also include the mirror step so that the updated config files are
    =transferred across, even if no extract is required. Failure to do so would
    =result in no update of the FCM config files on the remote platform, and
    =the revised preprocess and build list would not take effect.
ns=env/steps
sort-key=01b
value-titles=yes,no
values=mirror,

[env=mirror_steplist]
compulsory=false
description=Steplist for the remote platform.
help=A space-separated list of compile steps to perform on the remote
    =platform. These are performed after the code has been extracted on the
    =local platform and mirrored to the remote platform.
    =
    =This should be a list of preprocess-* and build-* instructions for the
    =executable(s) being compiled. For example, when compiling both the
    =reconfiguration and atmosphere executables this is set to:
    =
    =    preprocess-atmos build-atmos preprocess-recon build-recon
    =
    =In this case compilation of the reconfiguration can be disabled by
    =providing this variable without the two *-recon steps.
    =
    =If this is a two-platform build, setting this variable will override all
    =of the compile_[exec] settings on the Make steps panel. It will have no
    =effect on single-platform builds.
ns=env/steps
sort-key=00b
type=spaced_list

[env=netcdf_inc_path]
compulsory=false
description=NetCDF include files path.
help=The path to the include files of a NetCDF installation.
    =
    =Setting this variable will replace any existing default path. It will
    =also override the path specified by env=netcdf_path for using NetCDF
    =include files. If both variables are provided this path takes precedence.
ns=env/paths
#trigger = env=netcdf_path: ;
sort-key=a2

[env=netcdf_lib_path]
compulsory=false
description=NetCDF library files path.
help=The path to the library files of a NetCDF installation.
    =
    =Setting this variable will replace any existing default path. It will
    =also override the path specified by env=netcdf_path for using NetCDF
    =library files. If both variables are provided this path takes precedence.
ns=env/paths
#trigger = env=netcdf_path: ;
sort-key=a3

[env=netcdf_path]
compulsory=false
description=NetCDF installation root path.
help=The path to the top level of the NetCDF installation.
    =The relative paths to the include and library files are defined
    =in the relevant compiler configuration file, e.g.
    =    fcm-make/meto-pwr7-xlf/inc/pwr7-*.cfg
    =Using this variable assumes these relative paths are correct.
    =
    =In some cases the relative paths may differ between NetCDF installations,
    =for example when changing from an installation which uses
    =    $netcdf_path/include
    =to another installation which uses
    =    $netcdf_path/inc
    =
    =If you need to specify either of these paths in full, use
    =env=netcdf_inc_path and env=netcdf_lib_path instead.
    =Those variables will override the path to either the include or library
    =files defined here, as appropriate.
ns=env/paths
sort-key=a1

[env=openmp]
compulsory=true
description=Compile with OpenMP.
help=Choose whether to apply OpenMP compiler and library flags to the build.
    =These flags are specfied in the UM's fcm-make/[platform]/inc/options
    =directory and are local to each platform.
    =
    =Use the option "defined by suite" to pass the variable $OPENMP down from
    =the suite, which allows the same fcm_make app to be used for both OpenMP
    =and no-OpenMP builds. This variable should be set to either openmp_on
    =for OpenMP builds, or openmp_off for no-OpenMP builds.
    =
    =OpenMP settings can be overridden using the compiler (env=fcflags_omp) and
    =library (env=ldflags_omp) OpenMP flags, which supersede this switch.
    =
    =The SCM cannot currently be built with OpenMP on most platforms.
    =
    =This setting does not affect the GCOM OpenMP library flags, env=ldgcom_omp.
ns=env/build
sort-key=a2
value-titles=on,off,defined by suite
values=openmp_on,openmp_off,$OPENMP
warn-if=this == 'openmp_on' and env=config_type == 'scm'; # SCM cannot compile with OpenMP on most platforms

[env=optimisation_level]
compulsory=true
description=Optimisation level for builds.
help=Compiler optimisation level; this chooses one of several
    =pre-selected sets of optimisation options that determine how much
    =automatic optimisation the compiler is allowed to do. The available
    =choices are:
    =
    =    High  -  Maximum optimisation allowed, typically for NWP and
    =                operational suites.
    =    Safe  -  Moderate level of optimisation, typically for climate
    =                suites.
    =    Debug  -  No automatic optimisation.
    =    Rigorous  -  No automatic optimisation and additional compiler
    =                       checking options.
    =
    =    Defined by suite - the environment variable $OPTIMISATION is set in
    =        the suite which contains one of the above four options.
    =
    =Increasing the optimisation level generally results in a faster executable,
    =at the cost of increasing the risk of loss of bit-comparison. The lowest
    =optimisation settings are typically used to debug problematic code.
    =
    =When using a prebuild the env=prebuild setting should point to a build at
    =the same optimisation level as is set here, where possible.
ns=env/build
sort-key=a1
value-titles=high,safe,debug,rigorous,defined by suite
values=high,safe,debug,rigorous,$OPTIMISATION

[env=platform_config_dir]
compulsory=true
description=Platform configs directory.
help=Name of a directory containing site- and platform-specific
    =configuration files. This should be a sub-directory of the fcm-make
    =directory in the UM source code.
    =
    =Only one configuration directory at a time should be selected.
    =
    =This may be an environment variable $PLATFORM which should be defined
    =by the suite.
ns=env/config
sort-key=a1
trigger=env=mirror: this != 'meto-x86-ifort' and this != 'kma-xe6-cce';
       =env=mirror_steplist: this != 'meto-x86-ifort' and this != 'kma-xe6-cce';
widget[rose-config-edit]=rose.config_editor.valuewidget.choice.ChoicesValueWidget
                        =--editable
                        =kma-xe6-cce
                        =meto-pwr7-xlf
                        =meto-x86-ifort
                        =meto-xc40-cce
                        =meto-xc40-ifort
                        =ncas-xc30-cce
                        =ncas-xc30-ifort
                        =nci-x86-ifort
                        =$PLATFORM

[env=prebuild]
compulsory=true
description=Prebuild location.
help=The location of an existing UM build. This should be the full path
    =to the fcm_make* (task name) directory on the local platform.
    =
    =A space-separated list of prebuilds is also accepted; the order of
    =precedence for target files is from right-to-left.
    =
    =When using a prebuild the new build will inherit object files,
    =module interface files etc. from the prebuild wherever possible,
    =only preprocessing and compiling files that differ between the two.
    =Choosing a suitable prebuild can therefore greatly reduce the
    =overall build time.
ns=env/build
sort-key=a3
type=spaced_list

[env=prism_path]
compulsory=false
description=PRISM library path.
help=The path to the PRISM library, used for coupling with OASIS.
    =
    =Setting this variable will replace any existing default path.
ns=env/paths
sort-key=d1

[env=recon_exec]
compulsory=false
description=Reconfiguration executable name.
help=The name of the reconfiguration executable to be built.
    =
    =The default value is set in the 'common' UM fcm-make configs.
ns=env/build
sort-key=d1

[env=scm_exec]
compulsory=false
description=SCM executable name.
help=The name of the Single Column Model executable to be built.
    =
    =The default value is set in the 'common' UM fcm-make configs.
ns=env/build
sort-key=e1

[env=steplist]
compulsory=false
description=Steplist for the local platform.
help=A space-separated list of compile steps to perform on the local
    =platform.
    =
    =For a single-platform build this is normally all the steps
    =required to compile an executable. For example, when compiling both the
    =reconfiguration and atmosphere executables this is set to:
    =
    =    extract preprocess-atmos build-atmos preprocess-recon build-recon
    =
    =In this case compilation of the reconfiguration can be disabled by
    =providing this variable without the two *-recon steps.
    =
    =For a two-platform build this normally consists only of extract and mirror
    =steps:
    =
    =    extract mirror
    =
    =In this case rebuilding an executable without re-extracting the code
    =could be achieved by removing the extract step.
    =
    =Setting this variable will override the env=extract and env=mirror
    =settings; if this is a two-platform build it will also override all of the
    =compile_[exec] settings on the Make steps panel.
    =
    =
    =Mirroring FCM configuration files:
    =
    =In addition to mirroring the source code, the mirror step also transfers
    =the FCM config files that contain the preprocess and build instructions
    =to the remote platform. These config files are generated by the fcm_make
    =task and then used by the corresponding fcm_make2 task.
    =
    =If you edit the list of preprocess or build steps for a remote platform
    =you must also include the mirror step so that the updated config files are
    =transferred across, even if no extract is required. Failure to do so would
    =result in no update of the FCM config files on the remote platform, and
    =the revised preprocess and build list would not take effect.
ns=env/steps
sort-key=00a
type=spaced_list

[env=um_base]
compulsory=false
description=UM base extract source.
help=The basename for the extract of the UM source code, i.e. the place
    =in the UM project tree to take the primary extract from, such as
    =the trunk or a branch. Defaults to "trunk".
    =
    =Unless a path to a Subversion repository is specified this is taken
    =to be relative to the location defined by env=um_project_location.
    =
    =This is the source code against which your branches, working
    =copies etc. will be compared against and merged with prior to the
    =build. To build directly from a branch instead of merging changes
    =into the trunk, use e.g.
    =    branches/dev/user/vn10.0_trunk_override.
    =
    =Use env=um_rev to specify the revision of the base extract.
    =
    =Using an FCM keyword or Subversion URL here will override the value
    =of env=um_project_location for the primary extract only (i.e. not
    =for any branches). If all your source code lies in a different
    =repository, modify that variable instead.
ns=env/extract
sort-key=a2

[env=um_project_location]
compulsory=false
description=Location of the UM project.
help=The location of the UM project tree, in a Subversion repository.
    =This can be an FCM keyword, a Subversion URL or a file path.
    =Defaults to "fcm:um.xm".
    =
    =When working with the shared repository this must point to the
    =local mirror of the repository, not the shared repository itself.
    =
    =Unless explicitly specified with a full path to a repository,
    =the values of env=um_base and env=um_sources are taken relative
    =to this location.
ns=env/extract
sort-key=a1

[env=um_rev]
compulsory=true
description=UM base extract revision.
help=The revision of the base extract for the UM source code.
    =Defaults to "head".
    =
    =You may use FCM keywords (vn10.0) or revision numbers (12345) here.
    =
    =The base extract source location is specified with env=um_base.
ns=env/extract
pattern=(?i)^(vn\d+\.\d+(\.\d+)?|\d+|head)$
sort-key=a3

[env=um_sources]
compulsory=true
description=UM branches and/or working copies.
help=When extracting the UM source, merge in source code from the locations
    =and revisions listed here. These can be branches, working copies or even
    =the trunk. The merge is relative to the source code specified by
    =env=um_base at the revision env=um_rev.
    =
    =Complete FCM or Subversion URLs, or directory paths, may be used.
    =If only a partial path is provided this is taken to be relative to
    =the project tree associated with env=um_project_location. For example,
    =if the project location is specified by the "fcm:um.xm" keyword URL, then
    =    branches/dev/user/vn10.0_testing
    =is equivalent to
    =    fcm:um.xm/branches/dev/user/vn10.0_testing.
    =
    =If a complete URL is specified then when working with the shared
    =repository this must point to the local mirror of the repository,
    =not the shared repository itself.
    =
    =Use "@" to specify the revision of a repository location, e.g.
    =    branches/dev/user/vn10.0_testing@12345.
    =If a revision is not provided for a repository-based location,
    ="head" is assumed.
    =
    =
    =When providing a path to a working copy, the path must be visible to
    =the machine where the extract step takes place. If this is not the case,
    =prefix the path with the hostname of the machine where the working copy
    =is located, e.g.
    =    myhost:/data/local/user/vn10.0_working_copy.
ns=env/extract
sort-key=a4
type=spaced_list
